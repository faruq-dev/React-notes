//forEach() মেথড অ্যারে নিয়ে কাজ করে এবং প্রতিটা অ্যারে এলিমেন্টের জন্য প্রতিবার সে একটা ফাংশন (callback function) কল করে

//Example
const numbers = [40, 36, 9, 7, 10, 26, 20] //This is an array
numbers.forEach(doubleNum);

function doubleNum(value, index, array){
    console.log(value*2);
}

//উপরে প্রথমে numbers নামে একটা অ্যারে নিলাম

//এরপর number অ্যারের উপর .forEach() মেথড এপ্লাই করলাম numbers.forEach() এভাবে

// numbers.forEach(doubleNum) এখানে numbers টা হবে অ্যারের নাম, এরপর .forEach() লিখতে হবে এবং .forEach() এর ব্রাকেটে একটা ফাংশন নিলাম, ফাংশনের নাম দিলাম doubleNum, এই ফাংশনের কাজ হবে অ্যারের ভেতরে থাকা প্রতিটা ভ্যালুকে ডাবল করা অর্থাৎ ২ দিয়ে গুন করা

//এরপর উপরে ৭ নাম্বার লাইনে ফাংশনটা লিখলাম, এজন্য প্রথমে function লিখে ফাংশনের নাম লিখলাম doubleNum. 
// doubleNum এর ব্রাকেটে ৩টা আর্গুমেন্ট দিতে হবে যার নাম দিলাম (value, index, array), এখানে value হল অ্যারের ভেতর থাকা সংখ্যা গুল যেমন ৪০, ৩৬, ৯ ইত্যাদি, আর index হলো অ্যারের এলিমেন্টগুলোর ইনডেক্স নাম্বার যেমন 0,1,2,3,4 ইত্যাদি, আর array হলো টোটাল numbers নামক অ্যারে টা।

// এরপর কন্সোলে (value*2) দিলাম, ফলে অ্যারের প্রতিটা ভ্যালুকে ২ দিয়ে গুন করে কনসোলে প্রিন্ট করবে।

// ****** লুপটা যখন অ্যারেতে প্রবেশ করবে তখন অ্যারের প্রথম এলিমেন্ট ৪০ এর জন্য doubleNum ফাংশনটাকে কল করবে, এবং ৪০ কে ২ দিয়ে গুন করে কনসোলে প্রিন্ট করবে, এরপর আবার অ্যারেতে ফেরত আসবে এসে ২য় এলিমেন্ট ৩৬ এর জন্য আবার doubleNum ফাংশনটাকে কল করবে এবং ২ দিয়ে গুন করবে, এভাবে প্রতিটা অ্যারে এলিমেন্টের জন্যই সে ১বার করে ফাংশন টাকে কল করবে। আর প্রতিটা এলিমেন্টকে ডাবল করে কনসোলে দেখাবে।

//বার বার যে ফাংশনকে কল করা হয়/যায় তাকে কলব্যাক ফাংশন বলে ****


// নোটঃ  **********
// .forEach() মেথড কনসোলে কোনো কিছু রিটার্ন করেনা, অর্থাৎ numbers.forEach(doubleNum) এটাকে যদি একটা variable এর মধ্যে রেখে সেই variable কে কনসোল করা হয় তাহলে কনসোলে কিছুই আসবে না। যেমন let num = numbers.forEach(doubleNum, এবার num কে কনসোল করলে কিছুই প্রিন্ট হবেনা

// .forEach() মেথড মেইন অ্যারেকে পরিবর্তন করেনা তবে এটি নতুন কোনো অ্যারেও রিটার্ন করেনা
